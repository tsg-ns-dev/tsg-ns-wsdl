
package tsg.ns.wsdl.coop;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "NetSuitePortType", targetNamespace = "urn:platform_2022_2.webservices.netsuite.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NetSuitePortType {


    /**
     * 
     * @param changePassword
     * @return
     *     returns tsg.ns.wsdl.coop.SessionResponse
     * @throws InvalidVersionFault_Exception
     * @throws InvalidAccountFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "changePassword")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changePassword", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.ChangePasswordRequest")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.ChangePasswordResponse")
    public SessionResponse changePassword(
        @WebParam(name = "changePassword", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        ChangePassword changePassword)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param changeEmail
     * @return
     *     returns tsg.ns.wsdl.coop.SessionResponse
     * @throws InvalidVersionFault_Exception
     * @throws InvalidAccountFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "changeEmail")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changeEmail", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.ChangeEmailRequest")
    @ResponseWrapper(localName = "changeEmailResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.ChangeEmailResponse")
    public SessionResponse changeEmail(
        @WebParam(name = "changeEmail", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        ChangeEmail changeEmail)
        throws ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidAccountFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, InvalidVersionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "add")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "add", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AddRequest")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AddResponse")
    public WriteResponse add(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "delete")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "delete", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DeleteRequest")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DeleteResponse")
    public WriteResponse delete(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        BaseRef baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns tsg.ns.wsdl.coop.SearchResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "search")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "search", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.SearchRequest")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.SearchResponse")
    public SearchResult search(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchId
     * @param pageIndex
     * @return
     *     returns tsg.ns.wsdl.coop.SearchResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "searchMoreWithId")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchMoreWithId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.SearchMoreWithIdRequest")
    @ResponseWrapper(localName = "searchMoreWithIdResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.SearchMoreWithIdResponse")
    public SearchResult searchMoreWithId(
        @WebParam(name = "searchId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        String searchId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "update")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "update", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateRequest")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateResponse")
    public WriteResponse update(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "upsert")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsert", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpsertRequest")
    @ResponseWrapper(localName = "upsertResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpsertResponse")
    public WriteResponse upsert(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "addList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "addList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AddListRequest")
    @ResponseWrapper(localName = "addListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AddListResponse")
    public WriteResponseList addList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "deleteList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "deleteList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DeleteListRequest")
    @ResponseWrapper(localName = "deleteListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DeleteListResponse")
    public WriteResponseList deleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<BaseRef> baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "updateList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateListRequest")
    @ResponseWrapper(localName = "updateListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateListResponse")
    public WriteResponseList updateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "upsertList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsertList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpsertListRequest")
    @ResponseWrapper(localName = "upsertListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpsertListResponse")
    public WriteResponseList upsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.ReadResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "get")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "get", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetRequest")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetResponse")
    public ReadResponse get(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        BaseRef baseRef)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.ReadResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetListRequest")
    @ResponseWrapper(localName = "getListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetListResponse")
    public ReadResponseList getList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.GetAllResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getAll")
    @WebResult(name = "getAllResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAll", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAllRequest")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAllResponse")
    public GetAllResult getAll(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        GetAllRecord record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.GetSavedSearchResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getSavedSearch")
    @WebResult(name = "getSavedSearchResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSavedSearch", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetSavedSearchRequest")
    @ResponseWrapper(localName = "getSavedSearchResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetSavedSearchResponse")
    public GetSavedSearchResult getSavedSearch(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        GetSavedSearchRecord record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param includeInactives
     * @param customizationType
     * @return
     *     returns tsg.ns.wsdl.coop.GetCustomizationIdResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getCustomizationId")
    @WebResult(name = "getCustomizationIdResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getCustomizationId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetCustomizationIdRequest")
    @ResponseWrapper(localName = "getCustomizationIdResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetCustomizationIdResponse")
    public GetCustomizationIdResult getCustomizationId(
        @WebParam(name = "customizationType", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        CustomizationType customizationType,
        @WebParam(name = "includeInactives", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        boolean includeInactives)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns tsg.ns.wsdl.coop.ReadResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "initialize")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initialize", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.InitializeRequest")
    @ResponseWrapper(localName = "initializeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.InitializeResponse")
    public ReadResponse initialize(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        InitializeRecord initializeRecord)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns tsg.ns.wsdl.coop.ReadResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "initializeList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initializeList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.InitializeListRequest")
    @ResponseWrapper(localName = "initializeListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.InitializeListResponse")
    public ReadResponseList initializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param pageIndex
     * @param fieldDescription
     * @return
     *     returns tsg.ns.wsdl.coop.GetSelectValueResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getSelectValue")
    @WebResult(name = "getSelectValueResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSelectValue", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetSelectValueRequest")
    @ResponseWrapper(localName = "getSelectValueResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetSelectValueResponse")
    public GetSelectValueResult getSelectValue(
        @WebParam(name = "fieldDescription", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        GetSelectValueFieldDescription fieldDescription,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param itemAvailabilityFilter
     * @return
     *     returns tsg.ns.wsdl.coop.GetItemAvailabilityResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getItemAvailability")
    @WebResult(name = "getItemAvailabilityResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getItemAvailability", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetItemAvailabilityRequest")
    @ResponseWrapper(localName = "getItemAvailabilityResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetItemAvailabilityResponse")
    public GetItemAvailabilityResult getItemAvailability(
        @WebParam(name = "itemAvailabilityFilter", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        ItemAvailabilityFilter itemAvailabilityFilter)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param budgetExchangeRateFilter
     * @return
     *     returns tsg.ns.wsdl.coop.GetBudgetExchangeRateResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getBudgetExchangeRate")
    @WebResult(name = "getBudgetExchangeRateResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getBudgetExchangeRate", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetBudgetExchangeRateRequest")
    @ResponseWrapper(localName = "getBudgetExchangeRateResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetBudgetExchangeRateResponse")
    public GetBudgetExchangeRateResult getBudgetExchangeRate(
        @WebParam(name = "budgetExchangeRateFilter", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        BudgetExchangeRateFilter budgetExchangeRateFilter)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param currencyRateFilter
     * @return
     *     returns tsg.ns.wsdl.coop.GetCurrencyRateResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getCurrencyRate")
    @WebResult(name = "getCurrencyRateResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getCurrencyRate", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetCurrencyRateRequest")
    @ResponseWrapper(localName = "getCurrencyRateResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetCurrencyRateResponse")
    public GetCurrencyRateResult getCurrencyRate(
        @WebParam(name = "currencyRateFilter", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        CurrencyRateFilter currencyRateFilter)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param account
     * @return
     *     returns tsg.ns.wsdl.coop.GetDataCenterUrlsResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     */
    @WebMethod(action = "getDataCenterUrls")
    @WebResult(name = "getDataCenterUrlsResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDataCenterUrls", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetDataCenterUrlsRequest")
    @ResponseWrapper(localName = "getDataCenterUrlsResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetDataCenterUrlsResponse")
    public GetDataCenterUrlsResult getDataCenterUrls(
        @WebParam(name = "account", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        String account)
        throws ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param pageIndex
     * @param operationId
     * @param filters
     * @param fields
     * @return
     *     returns tsg.ns.wsdl.coop.GetPostingTransactionSummaryResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getPostingTransactionSummary")
    @WebResult(name = "getPostingTransactionSummaryResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getPostingTransactionSummary", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetPostingTransactionSummaryRequest")
    @ResponseWrapper(localName = "getPostingTransactionSummaryResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetPostingTransactionSummaryResponse")
    public GetPostingTransactionSummaryResult getPostingTransactionSummary(
        @WebParam(name = "fields", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        PostingTransactionSummaryField fields,
        @WebParam(name = "filters", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        PostingTransactionSummaryFilter filters,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        int pageIndex,
        @WebParam(name = "operationId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        String operationId)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns tsg.ns.wsdl.coop.GetServerTimeResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getServerTime")
    @WebResult(name = "getServerTimeResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getServerTime", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetServerTimeRequest")
    @ResponseWrapper(localName = "getServerTimeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetServerTimeResponse")
    public GetServerTimeResult getServerTime()
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRequestLimitFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param attachReference
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "attach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "attach", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AttachRequest")
    @ResponseWrapper(localName = "attachResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AttachResponse")
    public WriteResponse attach(
        @WebParam(name = "attachReference", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        AttachReference attachReference)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param detachReference
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "detach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "detach", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DetachRequest")
    @ResponseWrapper(localName = "detachResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.DetachResponse")
    public WriteResponse detach(
        @WebParam(name = "detachReference", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        DetachReference detachReference)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponse
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "updateInviteeStatus")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatus", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateInviteeStatusRequest")
    @ResponseWrapper(localName = "updateInviteeStatusResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateInviteeStatusResponse")
    public WriteResponse updateInviteeStatus(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        UpdateInviteeStatusReference updateInviteeStatusReference)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns tsg.ns.wsdl.coop.WriteResponseList
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "updateInviteeStatusList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatusList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateInviteeStatusListRequest")
    @ResponseWrapper(localName = "updateInviteeStatusListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.UpdateInviteeStatusListResponse")
    public WriteResponseList updateInviteeStatusList(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<UpdateInviteeStatusReference> updateInviteeStatusReference)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncAddList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncAddList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncAddListRequest")
    @ResponseWrapper(localName = "asyncAddListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncAddList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncUpdateList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpdateList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncUpdateListRequest")
    @ResponseWrapper(localName = "asyncUpdateListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncUpdateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param record
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncUpsertList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpsertList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncUpsertListRequest")
    @ResponseWrapper(localName = "asyncUpsertListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncUpsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncDeleteList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncDeleteList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncDeleteListRequest")
    @ResponseWrapper(localName = "asyncDeleteListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncDeleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<BaseRef> baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncGetList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncGetList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncGetListRequest")
    @ResponseWrapper(localName = "asyncGetListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncGetList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncInitializeList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncInitializeList", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncInitializeListRequest")
    @ResponseWrapper(localName = "asyncInitializeListResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncInitializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "asyncSearch")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncSearch", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncSearchRequest")
    @ResponseWrapper(localName = "asyncSearchResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult asyncSearch(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param jobId
     * @param pageIndex
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws AsyncFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "getAsyncResult")
    @WebResult(name = "asyncResult", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAsyncResult", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAsyncResultRequest")
    @ResponseWrapper(localName = "getAsyncResultResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAsyncResultResponse")
    public AsyncResult getAsyncResult(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        String jobId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        int pageIndex)
        throws AsyncFault_Exception, ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param jobId
     * @return
     *     returns tsg.ns.wsdl.coop.AsyncStatusResult
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws AsyncFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     */
    @WebMethod(action = "checkAsyncStatus")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "checkAsyncStatus", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.CheckAsyncStatusRequest")
    @ResponseWrapper(localName = "checkAsyncStatusResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.AsyncStatusResponse")
    public AsyncStatusResult checkAsyncStatus(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        String jobId)
        throws AsyncFault_Exception, ExceededConcurrentRequestLimitFault_Exception, ExceededRequestLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @param getDeletedFilter
     * @param pageIndex
     * @return
     *     returns tsg.ns.wsdl.coop.GetDeletedResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws ExceededRecordCountFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededRequestSizeFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getDeleted")
    @WebResult(name = "getDeletedResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDeleted", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetDeletedRequest")
    @ResponseWrapper(localName = "getDeletedResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetDeletedResponse")
    public GetDeletedResult getDeleted(
        @WebParam(name = "getDeletedFilter", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        GetDeletedFilter getDeletedFilter,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRecordCountFault_Exception, ExceededRequestLimitFault_Exception, ExceededRequestSizeFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns tsg.ns.wsdl.coop.GetAccountGovernanceInfoResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getAccountGovernanceInfo")
    @WebResult(name = "getAccountGovernanceInfoResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAccountGovernanceInfo", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAccountGovernanceInfoRequest")
    @ResponseWrapper(localName = "getAccountGovernanceInfoResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetAccountGovernanceInfoResponse")
    public GetAccountGovernanceInfoResult getAccountGovernanceInfo()
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRequestLimitFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

    /**
     * 
     * @return
     *     returns tsg.ns.wsdl.coop.GetIntegrationGovernanceInfoResult
     * @throws ExceededUsageLimitFault_Exception
     * @throws InvalidCredentialsFault_Exception
     * @throws InsufficientPermissionFault_Exception
     * @throws InvalidSessionFault_Exception
     * @throws UnexpectedErrorFault_Exception
     * @throws ExceededConcurrentRequestLimitFault_Exception
     * @throws ExceededRequestLimitFault_Exception
     */
    @WebMethod(action = "getIntegrationGovernanceInfo")
    @WebResult(name = "getIntegrationGovernanceInfoResult", targetNamespace = "urn:core_2022_2.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getIntegrationGovernanceInfo", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetIntegrationGovernanceInfoRequest")
    @ResponseWrapper(localName = "getIntegrationGovernanceInfoResponse", targetNamespace = "urn:messages_2022_2.platform.webservices.netsuite.com", className = "tsg.ns.wsdl.coop.GetIntegrationGovernanceInfoResponse")
    public GetIntegrationGovernanceInfoResult getIntegrationGovernanceInfo()
        throws ExceededConcurrentRequestLimitFault_Exception, ExceededRequestLimitFault_Exception, ExceededUsageLimitFault_Exception, InsufficientPermissionFault_Exception, InvalidCredentialsFault_Exception, InvalidSessionFault_Exception, UnexpectedErrorFault_Exception
    ;

}
